////////////////////////////////////
// LOGO
.logo {
	height: 3.25rem;
	margin-left: 2rem;
}

////////////////////////////////////
// search
.search {
	flex: 0 0 48%;
	//to center
	display:flex;
	align-items:center;
	justify-content: center;

	@media only screen and (max-width: $bp-smallest) {
		order: 1;
		flex: 0 0 100%;
		background-color: var(--color-grey-light-2);
	}
	
	&__input {
		// by default input does not inherit the properies of parent
		font-family: inherit;
		font-size: inherit;
		background-color: var(--color-grey-light-2);
		border: none;
		color: inherit;
		padding: 0.7rem 2rem;
		border-radius: 100px;
		width: 90%;
		margin-right: -3rem;
		transition: all 0.3s;

		&:focus {
			width: 100%;
			background-color: var(--color-grey-light-3);
			outline: none;
		}
		&::-webkit-input-placeholder{
			font-weight: 100;
			color:var(--color-grey-light-4);
		}
	}

	&__input:focus + &__button{
		background-color: var(--color-grey-light-3);
	}

	&__button {
		border: none;
		background-color: var(--color-grey-light-2);
		display:inline-block;
		margin-top:4px;

		&:focus{
			outline:none;
		}
		&:active{
			transform: translateY(2px);
		}
	}

	&__icon {
		width: 2rem;
		height: 2rem;
		// give color to icon
		fill: var(--color-grey-dark-3)
	}
}

////////////////////////////////////
// user-navigation
.user-nav {
	display: flex;
	align-items: center;
	justify-content: center;

	align-self: stretch;

	& > *{
		padding: 0 2rem;
		cursor: pointer;
		height: 100%;
		&:hover{
			background-color: var(--color-grey-light-2);
		}
		display: flex;
		align-items: center;
	}
	&__icon-box {
		position: relative;
	}

	&__icon {
		width: 2.25rem;
		height: 2.25rem;
		fill: var(--color-grey-dark-2);
		// position: relative; //position does not work on svg icons so we need to give position to its parent
	}

	&__notification {
		font-size: .8rem;
		width: 1.75rem;
		height: 1.75rem;
		border-radius: 50%;
		background-color: var(--color-primary);
		color: white;
		position:absolute;
		top: 1.7rem; right: 1.1rem;

		// to center the text 
		display: flex;
		align-items: center;
		justify-content: center;
	}

	&__user {

	}

	&__user-photo {
		height: 2.75rem;
		border-radius: 50%;
		margin-right: -2rem;
	}

	&__user-name {
	}
}

////////////////////////////////////
// sidebar

.side-nav{
	font-size: 1.4rem;
	list-style: none;
	margin-top: 3.5rem;

	@media only screen and (max-width: $bp-medium) {
		display: flex;
		margin-top: 0;
	}
	&__item{
		position: relative;
		:not(:last-child){
			margin-bottom: .5rem;
			@media only screen and (max-width: $bp-medium) {
				margin: 0;
			}
		}
		@media only screen and (max-width: $bp-medium) {
			flex: 1;
		}
	}
	// red hover effect on links
	&__item::before{
		content: '';
		position: absolute;
		top: 0%;left: 0%;
		height: 95%;
		width: 3px;
		// width: 100%;
		background-color: var(--color-primary);

		transform: scaleY(0);
		transform-origin: bottom;	//it is like main-axis(like justify-content in flex) to start the transform
		//effect, bydefault origin-axis is in the middle of element
		
		transition: transform 0.2s, 
			width 0.4s cubic-bezier(1, 0, 0, 1) 0.2s, //for width delay is .2s that is equal to transform transition-duration
				//it means width animation will start once transform animation finish
			background-color 0.1s;
	}
	&__item:hover::before, &__item--active::before{
		transform: scaleY(1);
		width: 100%;
	}
	&__item:active::before{
		background-color: var(--color-primary-light);
	}

	&__link{
		&:link, &:visited{
			color: var(--color-grey-light-1);
			text-decoration: none;
			text-transform: uppercase;
			display: block;
			padding: 1.5rem 3rem;
			display: flex;
			align-items: center;

			//to show the convent on top if we hover other wise ::before element will hide it
			position: relative;
			z-index: 100;	//z-index only works if position is specified
			@media only screen and (max-width: $bp-medium) {
				justify-content: center;
				padding: 2rem;
			}
			@media only screen and (max-width: $bp-small) {
				flex-direction: column;
				padding: 1rem;
			}
		}
	}
	&__icon{
		width: 1.75rem;
		height: 1.75rem;
		margin-right: 2rem;
		fill: currentColor;	//currentColor is the color of parent //on hover if parent color change then 
		//it will also change automatically

		@media only screen and (max-width: $bp-small) {
			margin-right: 0;
			width: 1.5rem;
			height: 1.5rem;
			margin-bottom: .7rem;
		}
	}
}


////////////////////////////////////
// sidebar
.legal{
	font-size: 1.2rem;
	text-align: center;
	padding: 2.5rem;
	color: var(--color-grey-light-2);

	@media only screen and (max-width: $bp-medium) {
		display: none;
	}
}


////////////////////////////////////
// gallery
.gallery{
	display: flex;
	&__item{

	}
	&__photo{
		width: 100%;
		display: block;
	}
}


////////////////////////////////////
// overview
.overview{
	display: flex;
	align-items: center;
	border-bottom: var(--line);
	&__heading{
		font-size: 2.25rem;
		font-weight: 300;
		text-transform: uppercase;
		letter-spacing: 1px;
		padding: 1.5rem 3rem;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
			padding: 1.25rem 2rem;
		}
	}

	&__stars{
		// this is a trick
		/*
			there are 4 elements in overview. we want that first two element should be in left and last two
			element in right.
			But we can not do it using justify-content in the overview(container).
			we can do it using flex : 1 here(in second element), the problem in this solution is now second
			element will take much space and if we want to give it a background-color then it look weared.

			So instead of doing it we can use margin-right:auto; it will automarically give space and also 
			element will not take much space.
		*/
		margin-right: auto;
		display: flex;	//by default svg icon behaive like inline text and can have space at bottom
		// to to align it perfectly we can make it as flex container using display: flex

	}

	&__icon-star, &__icon-location{
		width: 1.75rem;
		height: 1.75rem;
		fill: var(--color-primary);
	}
	&__icon-location{
		margin-right: .4rem;
	}

	&__location{
		display: flex;	//by default svg icon behaive like inline text and can have space at bottom
		// to to align it perfectly we can make it as flex container using display: flex
		font-size: 1.2rem;
		align-items: center;
	}

	&__rating{
		color: white;
		background-color: var(--color-primary);
		margin-left: 3rem;
		align-self: stretch;
		padding: 0 2.25rem;
		display: flex;
		flex-direction: column;
		justify-content: center;
		align-items: center;

		@media only screen and (max-width: $bp-small) {
			padding: 0 1.5rem;
		}
	}

	&__rating-average{
		font-size: 2.25rem;
		font-weight: 300;
		margin-bottom: -3px;

		@media only screen and (max-width: $bp-small) {
			font-size: 1.8rem;
		}
	}

	&__rating-count{
		font-size: .8rem;
		text-transform: uppercase;

		@media only screen and (max-width: $bp-small) {
			font-size: .5rem;
		}

	}

}

///////////////////////////////////
// overview
.btn-inline{
	border: none;
	color: var(--color-primary);
	font-size: inherit;
	border-bottom: 1px solid currentColor;
	padding-bottom: 2px;
	display: inline-block;
	background-color: transparent;
	cursor: pointer;
	transition: all 0.2s;

	& span{
		margin-left: 3px;
		transition: margin-left .3s;
	}

	&:hover{
		color: var(--color-grey-dark-2);
		& span{
			margin-left: 8px;
		}
	}

	&:focus{
		outline: none;
		animation: pulsate 0.5s infinite;
	}
}


@keyframes pulsate {
	0%{
		transform: scale(1);
		box-shadow: none;
	}
	50%{
		transform: scale(1.05);
		box-shadow: 0 1rem 4rem rgba(0, 0, 0, .25);
	}
	100%{
		transform: scale(1);
		box-shadow: none;
	}
}


///////////////////////////////////
// paragraph
.paragraph:not(:last-of-type){	//last-child is the last element in the container and last of type means
	//last child of that kink

	margin-bottom: 3rem;
}



///////////////////////////////////
// list
.list{
	margin: 3rem 0;
	padding: 3rem 0;
	list-style: none;
	border-bottom: var(--line);
	border-top: var(--line);
	display: flex;
	flex-wrap: wrap;
	&__item{
		flex: 0 0 50%;
		margin-bottom: .7rem;
	}

	// how to include svg icons in css
	&__item::before{
		content: '';
		display: inline-block;
		width: 1rem;
		height: 1rem;
		margin-right: 1rem;

		// work for all browsers	//but we can not change the color of icon in this case as we are using 
		//	it as background-image
		background-image: url(../img/SVG/chevron-thin-right.svg);
		background-size: cover;

		//for modern browsers: we can use mask instead of background-image
		// mask is an area throw which we can see what is befind that element
		@supports (-webkit-mask-image: url()) or (mask-image: url()) {
			background-color: var(--color-primary);
			-webkit-mask-image: url(../img/SVG/chevron-thin-right.svg); 
			-webkit-mask-size: cover;
			mask-image: url(../img/SVG/chevron-thin-right.svg); 
			mask-size: cover;

			background-image: none;	//if mask-imgae is supported then remove default background-image
		}
		

	}

}


///////////////////////////////////
// recommend
.recommend{
	font-size: 1.3rem;
	background-color: #fff;
	display: flex;
	align-items: center;
	&__count{
		margin-right: auto;
	}
	&__friends{
		display: flex;

	}
	&__photo{
		width: 4rem;
		height: 4rem;
		border-radius: 50%;
		border: 3px solid white;
		box-sizing: content-box;
		&:not(:last-child){
			margin-right: -1.5rem;
		}
	}
}

///////////////////////////////////
// review
.review{
	background-color: #fff;
	box-shadow: var(--shadow-light);
	padding: 3rem;
	margin-bottom: 3.5rem;
	position: relative;
	overflow: hidden;
	@media only screen and (max-width: $bp-medium) {
		padding: 2rem;
		margin-bottom: 3rem;
	}

	&__text{
		margin-bottom: 2rem;
		position: relative;
		z-index: 10;
	}

	&__user{
		display: flex;
		align-items: center;
	}

	&__photo{
		width: 4.5rem;
		height: 4.5rem;
		border-radius: 50%;
		margin-right: 2.5rem;
	}

	&__user-box{
		margin-right: auto;
	}

	&__user-name{
		font-size: 1.1rem;
		font-weight: 700;
		text-transform: uppercase;
		margin-bottom: .4rem;
	}

	&__user-date{
		font-size: 1rem;
		color: var(--color-gray-dark-3);
	}

	&__rating{
		color: var(--color-primary);
		font-size: 2.25rem;
		font-weight: 300;
	}

	// for quotation mark
	&::before{
		content:'\201C';
		position:absolute;
		top: -2.75rem;left: -1rem;
		color: var(--color-grey-light-2);
		font-size: 20rem;
		display: block;
		font-family: sans-serif;
		line-height: 1;
		z-index:1;
	}
}

////////////////////////////////////
// call to action(cta)
.cta{
	padding: 3.5rem 0;
	text-align: center;
	@media only screen and (max-width: $bp-medium) {
		padding: 2.5rem 0;
	}

	&__book-now{
		font-size: 2rem;
		font-weight: 300;
		text-transform: uppercase;
		margin-bottom: 2.5rem;
	}

}

///////////////////////////////////
// btn
.btn{
	font-size: 1.5rem;
	font-weight: 300;
	text-transform: uppercase;
	border: none;
	border-radius: 100px;
	background-image: linear-gradient(to right, var(--color-primary-light), var(--color-primary-dark));
	color: white;
	position: relative;
	overflow: hidden;	//as we given invisible element position outside the btn so to hide it we can use this
	&__visible{
		padding: 1.5rem 7.5rem;
	}

	&__invisible{
		padding: 1.5rem 0;
		position:absolute;
		top: -100%;
		left: 0%;
		
	}

	//for both visible and invisible
	& > *{
		display: inline-block;
		width: 100%;
		height: 100%;
		transition: all 0.8s;
	}

	&:hover	&__visible{
		transform: translateY(100%);
	}

	&:hover &__invisible{
		top: 0%;
	}

	&:hover{
		background-image: linear-gradient(to left, var(--color-primary-light), var(--color-primary-dark));
	}

	&:focus{
		outline: none;
		animation: pulsate .3s infinite;
	}

}
